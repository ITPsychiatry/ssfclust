% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/ssfcm.R
\name{SSFCM}
\alias{SSFCM}
\title{Semi-Supervised Fuzzy C-Means model.}
\usage{
SSFCM(
  X,
  C,
  U = NULL,
  max_iter = 200,
  conv_criterion = 1e-04,
  fun.distances = rdist::cdist,
  alpha = NULL,
  F_ = NULL
)
}
\arguments{
\item{X}{a matrix \emph{X} with predictor variables.}

\item{C}{a number of clusters to find.}

\item{U}{optionally: a first memberships matrix to initialize the algorithm.
Used mainly for reproducibility to compare calculations with other packages
(e.g. in Python).}

\item{fun.distances}{A function of two arguments: matrices X and V of the same
number of columns.
It should return a matrix of (nrow(X) x nrow(V)) of distances
between each row of X and all rows of V.
In case of Euclidean distance, the result should not be squared!}

\item{alpha}{the scaling factor, a floating point > 0.}

\item{F_}{the supervision  binary matrix of the same dimension as \emph{U}.}
}
\description{
If \emph{alpha} and \emph{F_} are not supplied (their default values are \code{NULL}),
then a regular unsupervised Fuzzy C-Means algorithm is fitted.
}
\examples{
# simulate 50 obs from N2((5, 5)) and 50 obs from N2((7, 7))
library(MASS)
X <- rbind(
  MASS::mvrnorm(50, mu=c(5, 8), Sigma=matrix(c(3, 0, 0, 3), ncol=2)),
  MASS::mvrnorm(50, mu=c(7, 10), Sigma=matrix(c(3, 0, 0, 3), ncol=2))
  )

# simulate supervision for 10\% of each class
F_ <- matrix(0, nrow=100, ncol=2)
F_[sample(1:50, 10), 1] <- 1
F_[sample(51:100, 10), 2] <- 1

model <- SSFCM(X=X, C=2)
model.ss <- SSFCM(X=X, C=2, alpha=1, F_=F_)

acc.unsupervised.1 <- sum(apply(model$U, 1, which.max) == c(rep(1, 50), rep(2, 50)))
acc.unsupervised.2 <- sum(apply(model$U, 1, which.max) == c(rep(2, 50), rep(1, 50)))
acc.supervised <- sum(apply(model.ss$U, 1, which.max) == c(rep(1, 50), rep(2, 50)))

}
